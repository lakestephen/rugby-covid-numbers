<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Rugby COVID Numbers</title>
    <style>
        img {
            height: 100px;
            float: left;
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.5.0.js"></script>
</head>
<body>
<pre>
<div id="area"></div>
<div id="age"></div>
<div id="specimen"></div>
<div id="projection"></div>
</pre>
<script>
    (function () {
        byArea();
        byAge();
        bySpecimenDate();
        byProjection();
    })();

    function byArea() {
        var endpoint = (
            'https://api.coronavirus.data.gov.uk/v2/data?areaType=msoa&areaCode=E07000220&metric=newCasesBySpecimenDateRollingSum&metric=newCasesBySpecimenDateRollingRate'
        );
        $.getJSON(endpoint, {
            format: "json"
        })
            .done(function (response) {

                let date = new Date();
                var past4oclock = date.getHours() >= 16;
                date.setDate(date.getDate() - (past4oclock ? 5 : 6));

                let d = dateToCovidApiDate(date);

                $(area).append("Rolling 7 day per 100,000 rate (and rolling 7 day cases sum) by area. Data up to " + CovidApiDateToDisplayDate(date) + ":<br>");

                $(area).append(response.body
                    .filter(obj => {
                        return obj.date === d;
                    })
                    .sort((a, b) => {
                        return b.newCasesBySpecimenDateRollingRate - a.newCasesBySpecimenDateRollingRate;
                    })
                    .map(obj => {
                        if (obj.newCasesBySpecimenDateRollingRate === null) {
                            return "0   (0)  - " +
                                obj.areaName;
                        }
                        else {
                            return ("" + obj.newCasesBySpecimenDateRollingRate.toFixed(0)).padEnd(4, " ") +
                                ("(" + obj.newCasesBySpecimenDateRollingSum + ") ").padEnd(5, " ") +
                                "- " +
                                obj.areaName;
                        }
                    })
                    .join("<br>")
                );
            });
    }

    function byAge() {
        var endpoint = (
            'https://api.coronavirus.data.gov.uk/v1/data?' +
            'filters=areaType=ltla;areaName=Rugby&' +
            'structure={"date":"date","newCasesBySpecimenDateAgeDemographics":"newCasesBySpecimenDateAgeDemographics"}'
        );
        $.getJSON(endpoint, {
            format: "json"
        })
            .done(function (response) {

                $(age).append("Rolling 7 day per 100,000 rate (and rolling 7 day cases sum) by age for all Rugby. Data up to " + CovidApiDateToDisplayDate(response.data[0].date) + ":<br>");

                $(age).append(response.data[0].newCasesBySpecimenDateAgeDemographics
                    .filter(obj => {
                        return obj.age !== "00_59" &&
                            obj.age !== "unassigned" &&
                            obj.age !== "60+"
                    })
                    .map(obj => {
                        return ("" + obj.rollingRate.toFixed(0)).padEnd(4, " ") +
                            ("(" + obj.rollingSum + ") ").padEnd(5, " ") +
                            "- " +
                            obj.age.replace("_", " > ");
                    })
                    .join("<br>")
                );
            });
    }

    function bySpecimenDate() {
        var endpoint = (
            'https://api.coronavirus.data.gov.uk/v1/data?' +
            'filters=areaType=ltla;areaName=Rugby&' +
            'structure={"date":"date","newCasesBySpecimenDate":"newCasesBySpecimenDate"}'
        );
        $.getJSON(endpoint, {
            format: "json"
        })
            .done(function (response) {

                $(specimen).append("Actual cases by specimen date for all Rugby:<br>");

                var index = 0;

                $(specimen).append(response.data
                    .slice(0, 11)
                    .reverse()
                    .map(obj => {
                        var provisional = index++ >= 7;
                        return ("" + obj.newCasesBySpecimenDate + " ").padEnd(3, " ") +
                            "- " +
                            CovidApiDateToDisplayDate(obj.date).padEnd(11, " ") +
                            (provisional ? "(provisional)" : "(incl. in rolling rate)");

                    })
                    .join("<br>")
                );
            });
    }

    function byProjection() {
        var endpoint = (
            'https://api.coronavirus.data.gov.uk/v1/data?' +
            'filters=areaType=ltla;areaName=Rugby&' +
            'structure={"date":"date","newCasesBySpecimenDate":"newCasesBySpecimenDate"}'
        );
        $.getJSON(endpoint, {
            format: "json"
        })
            .done(function (response) {

                $(projection).append("Rolling 7 day per 100,000 rate (and rolling 7 day cases sum) by date for all Rugby:<br>");
                $(projection).append(
                    "The final 4 rows of numbers should be treated with caution as they are incomplete projections (the final number is especially liable to be wrong). " +
                    "If you are uncomfortable with those caveats, then please ignore these numbers. <br>");

                var index = 0;

                let data = [];
                for (i=0;i<11;i++) {
                    data[i] = response.data.slice(i,i+7);
                }

                $(projection).append(data
                    .reverse()
                    .map(obj => {
                        let date = obj[0].date;

                        let sum = obj
                            .map(b => b.newCasesBySpecimenDate)
                            .reduce((accumulator, currentValue) => accumulator + currentValue);

                        let population = 108932;
                        let per100000 = (sum *100000)/population;

                        index++;
                        return ("" + per100000.toFixed(0) + " ").padEnd(4, " ") +
                            ("(" + sum + ") ").padEnd(6, " ") +
                            "- " +
                            CovidApiDateToDisplayDate(date).padEnd(11, " ") +
                            // ((index <= 6) ? "(Historical)" : "") +
                            ((index == 7) ? "(Today's)" : "") +
                            ((index >= 8) && (index <= 9)? "(PROJECTED)" : "") +
                            ((index >= 10) && (index <= 10)? "(PROJECTED - CAUTION!!!)" : "") +
                            ((index >=11)? "(PROJECTED - EXTREME CAUTION!!!)" : "");


                    })
                    .join("<br>")
                );
            });
    }
    function CovidApiDateToDisplayDate(dateString) {
        let date = new Date(dateString);

        let monthNames = ["Jan", "Feb", "Mar", "Apr",
            "May", "Jun", "Jul", "Aug",
            "Sep", "Oct", "Nov", "Dec"];

        let weekdayNames = ["Sun", "Mon", "Tue",
            "Wed", "Thr", "Fri", "Sat"]

        let day = date.getDate();
        let monthName = monthNames[date.getMonth()];
        let weekdayName = weekdayNames[date.getDay()];

        return `${weekdayName} ${day} ${monthName}`;
    }

    function dateToCovidApiDate(date) {
        let day = ("" + date.getDate()).padStart(2, "0");
        let month = ("" + (date.getMonth() + 1)).padStart(2, "0");
        let year = date.getFullYear();

        return `${year}-${month}-${day}`;

    }

</script>

</body>
</html>